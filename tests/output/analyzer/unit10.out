<StartNode: stmt_list=[<FunctionDefNode: body=[<AssignmentNode: target=<DeclarationNode: type=((), 'bool'), name=<NameNode: type=((), 'bool'), namespace=('main',), lineno=4, value='is_true'>, var_type=<TypeNode: type=((), 'bool'), namespace=(), lineno=4, value='bool'>, lineno=4>, value=<BinaryOpNode: operator='or', right=<ParenNode: expr=<BinaryOpNode: operator='>', right=<NumberNode: type=((), 'int'), lineno=4, value=2>, type=((), 'bool'), lineno=4, left=<NumberNode: type=((), 'int'), lineno=4, value=1>>, type=((), 'bool'), lineno=4>, type=((), 'bool'), lineno=4, left=<BinaryOpNode: operator='or', right=<ParenNode: expr=<BinaryOpNode: operator='<', right=<NumberNode: type=((), 'int'), lineno=4, value=2>, type=((), 'bool'), lineno=4, left=<NumberNode: type=((), 'int'), lineno=4, value=1>>, type=((), 'bool'), lineno=4>, type=((), 'bool'), lineno=4, left=<ParenNode: expr=<BinaryOpNode: operator='==', right=<NumberNode: type=((), 'int'), lineno=4, value=2>, type=((), 'bool'), lineno=4, left=<NumberNode: type=((), 'int'), lineno=4, value=1>>, type=((), 'bool'), lineno=4>>>, lineno=4>, <PrintNode: values=[<NameNode: type=((), 'bool'), namespace=('main',), lineno=5, value='is_true'>], lineno=5>, <AssignmentNode: target=<DeclarationNode: type=((), 'bool'), name=<NameNode: type=((), 'bool'), namespace=('main',), lineno=6, value='is_false'>, var_type=<TypeNode: type=((), 'bool'), namespace=(), lineno=6, value='bool'>, lineno=6>, value=<BinaryOpNode: operator='and', right=<ParenNode: expr=<BinaryOpNode: operator='>', right=<NumberNode: type=((), 'int'), lineno=6, value=2>, type=((), 'bool'), lineno=6, left=<NumberNode: type=((), 'int'), lineno=6, value=1>>, type=((), 'bool'), lineno=6>, type=((), 'bool'), lineno=6, left=<BinaryOpNode: operator='and', right=<ParenNode: expr=<BinaryOpNode: operator='<', right=<NumberNode: type=((), 'int'), lineno=6, value=2>, type=((), 'bool'), lineno=6, left=<NumberNode: type=((), 'int'), lineno=6, value=1>>, type=((), 'bool'), lineno=6>, type=((), 'bool'), lineno=6, left=<ParenNode: expr=<BinaryOpNode: operator='==', right=<NumberNode: type=((), 'int'), lineno=6, value=2>, type=((), 'bool'), lineno=6, left=<NumberNode: type=((), 'int'), lineno=6, value=1>>, type=((), 'bool'), lineno=6>>>, lineno=6>, <PrintNode: values=[<NameNode: type=((), 'bool'), namespace=('main',), lineno=7, value='is_false'>], lineno=7>, <AssignmentNode: target=<NameNode: type=((), 'bool'), namespace=('main',), lineno=8, value='is_false'>, value=<UnaryOpNode: operand=<ParenNode: expr=<BinaryOpNode: operator='<=', right=<NumberNode: type=((), 'int'), lineno=8, value=42>, type=((), 'bool'), lineno=8, left=<NumberNode: type=((), 'float'), lineno=8, value=3.14>>, type=((), 'bool'), lineno=8>, operator='not', type=((), 'bool'), lineno=8>, lineno=8>, <PrintNode: values=[<NameNode: type=((), 'bool'), namespace=('main',), lineno=9, value='is_false'>], lineno=9>], return_type=<TypeNode: type=((), 'void'), namespace=(), lineno=3, value='void'>, params=[], name=<NameNode: namespace=(), lineno=3, value='main'>, lineno=3>]>
