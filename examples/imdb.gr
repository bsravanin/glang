# Class definitions based on Gramola Tutorial Section 8.1.3.
# Do we need or support those variable types?
# Are the variable types supposed to be keywords? Not listed in LRM. :(

class Movie(Node):
	str title
	def Movie __init__(dict<str,str> dd, str movietitle):
		Node(dd)
		self.title = movietitle


class Actor(Node):
	str name
	def Actor __init__(dict<str,str> dd, str actorname):
		Node(dd)
		self.name = actorname


class IMDB(Graph):

	str dumb

	def Movie find_movie(str title):
		list<Node> setn = self.get_all_nodes()
		for Node n in setn:
			if isinstance(n, "Movie"):
				Movie movie = (Movie)n
				if movie.title == title:
					return movie
		return null

	def Actor find_actor(str name):
		list<Node> setn = self.get_all_nodes()
		for Node n in setn:
			if isinstance(n, "Actor"):
				Actor actor = (Actor)n
				if actor.name == name:
					return actor
		return null

	def void worked_with(Actor actor1, Actor actor2):
		self.edge(actor1, actor2,  {'type': 'work_with'})
		self.edge(actor2, actor1,  {'type': 'work_with'})

	def void act_in(Actor actor, Movie movie):
		self.edge(actor, movie, {'type': 'act_in'})

	def void update_movie(str title, str attr, str newvalue):
		Movie movie = find_movie(title)
		movie.set_attribute(attr, newvalue)


def void main():
	IMDB imdb = IMDB()

	Movie western = Movie({'year':'1968', 'rating':'8.6', 'length':'175 mins'}, 'Once Upon a Time in the West')

	imdb.add_node(western)
	Actor Henry = Actor({'Gender':'male', 'Period' : '1905-1982'}, 'Henry Fonda')
	Actor Charles = Actor({'Gender':'male', 'Period' : '1921-2003'}, 'Charles Bronson')

	imdb.add_node(Henry)
	imdb.add_node(Charles)

	imdb.worked_with(Henry, Charles)
	imdb.act_in(Henry, western)
	imdb.act_in(Charles, western)

	Actor target_actor = imdb.find_actor('Henry Fonda')
	EdgeSet target_edges = target_actor.out_edges()
	print 'Fetch out edges of Actor node(Henry Fonda), and print the edge type:'
	for Edge e in target_edges:
		print e.get_attribute('type')

	imdb.update_movie('Once Upon a Time in the West', 'rating', '7.3')
	print 'Update the rating of Once Upon a Time in the West', 'new rating:'
	Movie target_movie = imdb.find_movie('Once Upon a Time in the West')
	print target_movie.get_attribute('rating')   # check this
